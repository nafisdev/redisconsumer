# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.

version: '3.4'

services:
  consumerredis:
    image: consumerredis
    build:
      context: .
      dockerfile: consumerredis/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - target: 5081
        published: 5081
        protocol: tcp
        mode: host
      # - '127.0.0.1:5081:5081'
        # - '0.0.0.0:5081:5081'
    networks:
      - consumer-network

  # redis:
  #   image: redis:6.2-alpine
  #   container_name: redis
  #   environment:
  #     - ALLOW_EMPTY_PASSWORD=yes
  #   ports:
  #     - '0.0.0.0:5489:6379'
  #   networks:
  #     - consumer-network

  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '0.0.0.0:5489:6379'
      # - '127.0.0.1:5489:6379'
    networks:
      - consumer-network
    volumes:
      - ./redis/redis.conf:/opt/bitnami/redis/mounted-etc/redis.conf

    # MySQL service
  consumer_mysqldb:
      container_name: "consumer_mysqldb"
      build: ./docker/mysql
      hostname: consumer_mysqldb
      tty: true
      ports:
          # - '127.0.0.1:3308:3306'
          - '0.0.0.0:3308:3306'
      # Environment used to create the relevant DB and user
      environment:
          MYSQL_DATABASE: consumer
          MYSQL_USER: consumer
          MYSQL_PASSWORD: consumer
          MYSQL_ROOT_PASSWORD: consumer
      # Specifying a restart policy for the containerized service
      restart: always
      volumes:
          - ./log/mysql:/var/log/mysql
      networks:
          - consumer-network

networks:
  consumer-network:
    driver: bridge

# volumes:
#   redis:
#     external: true
